


*** Please read the below instructions carefully and submit the project in the given time. This project might take you 2 days to complete.***

Project Overview: Using RestAPI and Making Payments with Shift4 and ACI.

Objective

Using RestAPI, implement payment systems using Shift4 and ACI, and execute command-line operations.

Scenario

Build a payment processing service that handles payments using Shift4 and ACI payment gateways. Your service should expose RESTful endpoints to perform these operations.

Requirements
⦁	Create a RestAPI using Node.js with Express or PHP with any light framework.
⦁	Implement payment processing with both Shift4 and ACI.
⦁	Provide command-line commands to interact with your API, including the cvv parameter.
⦁	Document your API and share the usage instructions.

Steps and Tasks

⦁	Setup the Project
⦁	Choose a programming language and framework (Node.js with Express or PHP with a light framework).
⦁	Initialize the project and set up necessary dependencies.
 Project from Portonics Limited for Software Engineering Team

⦁	Deﬁne the Endpoints
⦁	POST /api/v1/payments/shift4: Process a payment using Shift4.
 POST /api/v1/payments/aci: Process a payment using ACI.
⦁	GET /api/v1/payments/:id: Retrieve the payment status by ID.

⦁	Implement Payment Processing
⦁	Shift4 Payment Gateway Integration: Implement the payment processing logic using Shift4’s API.
⦁	Shift4 API Documentation: https://dev.shift4.com/docs/api#charge-create
⦁	ACI Payment Gateway Integration: Implement the payment processing logic using ACI’s API.
⦁	ACI API Documentation: https://docs.oppwa.com/integrations/server-to-server#syncPayment

Note: Please see the below red-marked option (Debit) you need to consider for this project

 







 5. Documentation
⦁	Document the API endpoints with sample requests and responses.
⦁	Include instructions on how to set up and run the project.
⦁	Provide examples of CLI usage.

Expectations from you:
⦁	Write well-organized code that follows best practices.
⦁	Document the API endpoint and CLI command clearly.
⦁	Handle errors and edge cases thoroughly.
⦁	Use the speciﬁc terms mentioned in the attached documents.
Submission method:
⦁	Upload the complete source code to a public repository (GitHub, GitLab, or Bitbucket).
⦁	Provide clear and simple instructions for running the application and its tests.
⦁	Use Dockerﬁle, to ensure it facilitates easy environment setup.
⦁	Make sure the documentation covers all necessary details for users to understand and use the application effectively.




